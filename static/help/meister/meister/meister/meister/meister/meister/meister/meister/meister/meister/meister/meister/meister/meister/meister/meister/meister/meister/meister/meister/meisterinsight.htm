<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Meister Insight</title>
<meta charset="utf-8" /><link rel="stylesheet" type="text/css" href="LinksExt/MeisterInsight.css" />
<script src="js/nethelp.redirector.js" type="text/javascript"></script>
<link rel="prev" href="determiningthevalueofomsubmitmaxuserproc1.htm" /><link rel="next" href="buildauditswithbuildforensics1.htm" />
<meta name="Generator" content="ComponentOne Doc-To-Help v.2014.1.0.935" />
</head>
<body data-c1-topic-id="1fd7daf3-3024-4b45-b70f-0d279906b6b8">
<h1>Meister Insight</h1>
<p class="MsoNormal"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">Meister Insight provides an inside 
view of how binaries were created and how components within a build impacts the 
overall application.  OpenMake Meister is the only build solution that 
provides this level of comprehensive audit reporting for all languages 
including:  Java, C, C++, C#, C-UNIX, COBOL, Assembler, PL1, Pascal, Visual 
Basic and Delphi.  Meister Insight serves those users who are responsible 
for tracking what source code is ready to be approved for production release and 
who must guarantee that the source code managed inside the source code 
repository was actually used to create the production binaries.  </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">Build Audit reports provide what is 
called Build Forensics, giving production control and IT administrators the 
ability to match the binaries to the source code used to create the 
binaries.  A Build Audit report is generated by Meister at build time. It 
reports on all items used in a build, even when those items were not stored 
inside a version control repository.</p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">Impact Analysis report provides 
further insight into how applications are assembled and what impact a single 
change may have on an application. Exploring change impact in this way can 
provide a production control administrator the ability to predict the success of 
any change moving to production.  For example, if a new version of a 
3<sup>rd</sup> party component is to be installed into production, such as an 
Oracle database upgrade, Impact Analysis can expose all applications with a 
dependency on that 3<sup>rd</sup> party component.  Impact Analysis is 
gathered during the actual compile and link process so the information is always 
up to date.</p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="MARGIN-LEFT: 36pt; LINE-HEIGHT: 150%"><b><i>Tutorial 
Help:</i></b><i>  View an online demo on <a href="http://www.openmakesoftware.com/online-tutorials/Excursion%20A-15/Excursion%20A-15.html">generating 
Impact Analysis and Build Audit Reports.</a></i></p>
<p class="MsoNormal" style="MARGIN-LEFT: 36pt; LINE-HEIGHT: 150%"><i></i> </p>
<p class="MsoNormal"> </p>
<div class="related-topics-header">
<p class="RelatedHead">More:</p>
<div class="related-topics">
<p class="MsoNormal"><a class="topic-link" style="TEXT-DECORATION: none" href="buildauditswithbuildforensics1.htm">Build Audits with Build 
Forensics</a></p>
<p class="MsoNormal"><a class="topic-link" style="TEXT-DECORATION: none" href="footprintingembeddingthedna1.htm">Footprinting - Embedding the DNA</a></p>
<p class="MsoNormal"><a class="topic-link" style="TEXT-DECORATION: none" href="impactanalysiswithdependencydiscovery1.htm">Impact Analysis with 
Dependency Discovery</a></p></div></div></body></html>
