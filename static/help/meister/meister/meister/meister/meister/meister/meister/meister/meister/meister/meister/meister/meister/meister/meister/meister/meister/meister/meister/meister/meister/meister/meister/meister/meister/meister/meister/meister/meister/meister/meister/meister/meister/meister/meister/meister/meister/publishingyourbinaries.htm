<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>Publishing your Binaries</title>
<meta charset="utf-8" /><link rel="stylesheet" type="text/css" href="LinksExt/BinaryRepository.css" />
<script src="js/nethelp.redirector.js" type="text/javascript"></script>
<link rel="prev" href="guidetoonlinetutorials.htm" /><link rel="next" href="viewingthebinaryrepository.htm" />
<meta name="Generator" content="ComponentOne Doc-To-Help v.2014.1.0.935" />
</head>
<body data-c1-topic-id="15b1be34-2915-40a0-ba1c-1513dc10f13d">
<h1>Publishing your Binaries</h1>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">You can publish your Binaries to 
the central Repository as part of your Build processing.  Publishing your 
binaries allows you to assign a Status to your Build Results, and provide a 
central location for downloading the build results for both current and past 
build results.  The Binary Repository serves as a central reference 
location from which your deployments can be managed across the lifecycle.  
Deploy+ can use the Meister Binary Repository to track and verify software 
deployments.</p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">You publish your binaries to a 
<i>Collection</i> within the Binary Repository. A <i>Collection</i> is a 
subdirectory of the Binary Repository where your binaries and other required 
deployable files will be stored and referenced.  Because each 
<i>Collection</i> will potentially store multiple versions of the build, the 
<i>Collections</i> are stored based on the Build Number generated as part of the 
<i>Workflow</i>.  </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">To publish your binaries use the 
“Publish Binaries” <i>Workflow Activity Group</i>, found when you select “<i>Add 
Activity</i>” from the Eclipse RCP Workflow Editor, <i>Activities Tab</i>.  
You can publish your build results from either a Meister Build, or from an 
external build script such as a Make, Ant or Maven script.  </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">When publishing the build results, 
you will need to specify the <i>Collection</i> name as well as the files you 
wish to store in the Repository.  When using Meister to manage your build, 
you can specify one or more Meister Build Control files (i.e. Windows.mak, 
Java.mak, Aix.mak, Hpux.mak, Linux.mak or Solaris.mak).  The Meister Build 
Control File will be used to determine what files need to be archived to the 
Repository.  If you are using a external manual script for managing the 
build, you will need to list the files, using wild cards to include in the 
archive process (i.e. *.exe, .dll, *.jar).  In either case, you can add 
other files that you may wish to include in the archive, such as a Meister Build 
Audit Report.</p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<div class="related-topics-header">
<p class="RelatedHead">More:</p>
<div class="related-topics">
<p class="MsoNormal"><a class="topic-link" style="TEXT-DECORATION: none" href="viewingthebinaryrepository.htm">Viewing the Binary Repository</a></p>
<p class="MsoNormal"><a class="topic-link" style="TEXT-DECORATION: none" href="changingthestatusofyourworkflow.htm">Changing the Status of your 
Workflow</a></p>
<p class="MsoNormal"><a class="topic-link" style="TEXT-DECORATION: none" href="customizingthebuildstatusvalues.htm">Customizing the Build Status 
Values</a></p></div></div></body></html>
