<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html><html xmlns="https://www.w3.org/1999/xhtml"><head><title>Reusing Parameterized Workflow and Deploy Services</title>
<meta charset="utf-8" /><link rel="stylesheet" type="text/css" href="LinksExt/AdvancedWorkflowFeatures.css" />
<script src="js/nethelp.redirector.js" type="text/javascript"></script>
<link rel="prev" href="definingnestedorreusableworkflows.htm" /><link rel="next" href="filteringandorganizingyourworkflows.htm" />
<meta name="Generator" content="ComponentOne Doc-To-Help v.2014.1.0.935" />
</head>
<body data-c1-topic-id="c31a02f8-5e3f-47cd-91d6-b0f6782657f8">
<h2 style="LINE-HEIGHT: 150%">Reusing Parameterized Workflow and Deploy 
Services</h2>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"><i>Workflow</i> and <i>Deploy 
Services</i> allow an additional level of reuse of common <i>Activities 
</i>across the enterprise, much like a <i>Workflow</i> library of 
<i>Activities</i>. By automatically inheriting all the environment settings of 
their parent <i>Workflow</i>, <i>Workflow </i>and<i> Deploy Services </i>can be 
defined once and reused to <i>n </i>number of <i>Remote Agents</i> across the 
enterprise. This means that, for example, a <i>Deploy Service</i> that contains 
<i>Activities </i>with host information specific to individual application 
servers can be defined once and if inserted into <i>Workflows</i> associated 
with different machines, can automatically inherit the required host 
information. </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">The process for adding <i>Workflow 
</i>and <i>Deploy Services </i>is very similar to that of defining new 
<i>Workflows.</i> However, because <i>Workflow </i>and <i>Deploy Services</i> 
are stateless, they do not have some of the additional configuration associated 
with a <i>Workflow</i>, such as machine-specific information, scheduling and 
continuous integration properties. Once defined, a <i>Workflow</i> or <i>Deploy 
Service</i> is easily added to a parent <i>Workflow </i>by clicking on the “Add 
Activity” button and adding the desired <i>Activities </i>from the <i>Workflow 
Service </i>or <i>Deploy Service </i>plug-ins. Any parameters within 
<i>Activities</i> belonging to the included <i>Workflow </i>or <i>Deploy 
Services </i> will automatically show in the added <i>Activity.</i> At that 
point, you can either statically define the parameter within the parent 
<i>Workflow</i> or choose to leave them as undefined parameters, in which case 
users will be prompted to supply values at execution time. </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%">It is important to remember that 
<i>Workflow </i>and <i>Deploy Services </i>will run on the machine of the 
<i>Workflow</i> to which they are added. This means that when added to a local 
“My Computer” <i>Workflow</i>, the <i>Service</i> will attempt to run locally. 
Further documentation on the definition and setup can be found in the 
<i>Workflow and Deploy Services</i> sections of the documentation.</p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal" style="LINE-HEIGHT: 150%"> </p>
<p class="MsoNormal"> </p><span id="related-topics"></span></body></html>
