<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html><html xmlns="https://www.w3.org/1999/xhtml"><head><title>Build Types and Methods</title>
<meta charset="utf-8" /><link rel="stylesheet" type="text/css" href="LinksExt/zOS Administration Guide.css" />
<script src="js/nethelp.redirector.js" type="text/javascript"></script>
<link rel="prev" href="compilers1.htm" /><link rel="next" href="methodsandoomlom.htm" />
<meta name="Generator" content="ComponentOne Doc-To-Help v.2014.1.0.935" />
</head>
<body data-c1-topic-id="bc8ee1f3-f008-426e-8c21-12a1c4f1a043">
<h3>Build Types and Methods</h3>
<p class="t1Text141"> </p>
<p class="MsoNormal">The first step in customizing your unique <i>Build Types</i>, 
Build <i>Rules</i> and <i>Methods</i> is to review your compiler/tool 
documentation.  By reviewing your documentation, you can determine the 
different possible input and output file extensions that can be used by your 
compiler.  Your compiler documentation is also where you will find the 
command line calls that your compiler requires in order to perform specific file 
translations.</p>
<p class="MsoNormal">The Steps to define a custom <i>Build Type</i> are as 
follows:</p>
<p class="MsoNormal" style="MARGIN-LEFT: 25.2pt; TEXT-INDENT: -18pt; tab-stops: 54.0pt">1)  
Develop your custom <i>Method</i> using the reusable REXX routines.  
<i></i></p>
<p class="MsoNormal" style="MARGIN-LEFT: 25.2pt; TEXT-INDENT: -18pt; tab-stops: 54.0pt">2)  
2Save your custom <i>Method</i> to the following directory:</p>
<p class="MsoNormal" style="TEXT-ALIGN: center" align="center"><span style="FONT-SIZE: 11pt; FONT-FAMILY: Courier">&lt;root&gt;/&lt;server&gt;/webapps/openmake.ear/openmake.war/<i>Methods</i></span></p>
<p class="MsoNormal"><span style="FONT-SIZE: 11pt"></span> </p>
<p class="MsoNormal" style="MARGIN-LEFT: 25.2pt; TEXT-INDENT: -18pt; tab-stops: 54.0pt">3)  
Through the Web Client, add a new <i>Build Type</i>.</p>
<p class="t1Text141" style="MARGIN-LEFT: 9pt"> </p>
<p class="MsoNormal" style="MARGIN-LEFT: 25.2pt; TEXT-INDENT: -18pt; tab-stops: 54.0pt">4)  
Associate the Build <i>Rules</i> with the new <i>Build Type</i>.  Your 
customized script will appear in the "Command Script to Execute" Drop-Down List 
Box.</p>
<p class="t1Text141"> </p>
<p class="MsoNormal" style="MARGIN-LEFT: 25.2pt; TEXT-INDENT: -18pt; tab-stops: 54.0pt">5)  Test 
your new <i>Build Type</i> by creating a Target that uses the custom <i>Build 
Type</i> and then execute a Build.  </p>
<p class="MsoListParagraph"> </p>
<p class="t1Text141" style="MARGIN-LEFT: 9pt"> </p><span id="related-topics"></span></body></html>
